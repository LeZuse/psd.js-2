// Generated by CoffeeScript 1.6.1
(function() {
  var PSDLevels, assert;

  assert = require('../psdassert');

  PSDLevels = (function() {

    function PSDLevels(layer, length) {
      this.layer = layer;
      this.length = length;
      this.file = this.layer.file;
      this.data = {
        records: []
      };
    }

    PSDLevels.prototype.parse = function() {
      var start, tag, version;
      start = this.file.tell();
      version = this.file.readShortInt();
      assert(version === 1);
      this.parseLevelRecords();
      if (this.file.tell() - start < this.length - 4) {
        tag = this.file.readf(">4s");
        assert.equal(tag, "Lvls");
        version = this.file.readShortInt();
        assert.equal(version, 3);
        this.data.levelCount = this.file.readShortInt() - 29;
        assert(levelCount >= 0);
        this.parseLevelRecords(levelCount);
        return this.data;
      }
    };

    PSDLevels.prototype.parseLevelRecords = function(count) {
      var i, record, _i, _ref, _results;
      if (count == null) {
        count = 29;
      }
      _results = [];
      for (i = _i = 0; 0 <= count ? _i < count : _i > count; i = 0 <= count ? ++_i : --_i) {
        record = {};
        _ref = this.file.readf(">hhhhh"), record.inputFloor = _ref[0], record.inputCeiling = _ref[1], record.outputFloor = _ref[2], record.outputCeiling = _ref[3], record.gamma = _ref[4];
        record.gamma /= 100;
        if (i < 27) {
          assert(record.inputFloor >= 0 && record.inputFloor <= 255);
          assert(record.inputCeiling >= 2 && record.inputCeiling <= 255);
          assert(record.outputFloor >= 0 && record.outputFloor <= 255);
          assert(record.outputCeiling >= 0 && record.outputCeiling <= 255);
          assert(record.gamma >= 0.1 && record.gamma <= 9.99);
        }
        _results.push(this.data.records.push(record));
      }
      return _results;
    };

    return PSDLevels;

  })();

  module.exports = PSDLevels;

}).call(this);
